name: CI to Docker Hub (max4com/php-fpm)

on:
  workflow_dispatch:

jobs:
  
  build:
    name: "[ PHP-${{ matrix.version }} ]"
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        version:
          - '5.2'
          - '5.3'
          - '5.4'
          - '5.5'
          - '5.6'
          - '7.0'
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.run_number }}-${{ matrix.version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.run_number }}-${{ matrix.version }}-
      - 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: Build and push ${{ matrix.version }}-BASE
        id: docker_build_base
        uses: docker/build-push-action@v2
        with:
          context: ./Dockerfiles/base
          file: ./Dockerfiles/base/Dockerfile-${{ matrix.version }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/php-fpm:${{ matrix.version }}-base
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - 
        name: Image digest ${{ matrix.version }}-BASE
        run: echo ${{ steps.docker_build_base.outputs.digest }}
      - 
        name: Build and push ${{ matrix.version }}-MODS
        id: docker_build_mods
        uses: docker/build-push-action@v2
        with:
          context: ./Dockerfiles/mods
          file: ./Dockerfiles/mods/Dockerfile-${{ matrix.version }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/php-fpm:${{ matrix.version }}-mods
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - 
        name: Image digest ${{ matrix.version }}-MODS
        run: echo ${{ steps.docker_build_mods.outputs.digest }}
      - 
        name: Build and push ${{ matrix.version }}-PROD
        id: docker_build_prod
        uses: docker/build-push-action@v2
        with:
          context: ./Dockerfiles/prod
          file: ./Dockerfiles/prod/Dockerfile-${{ matrix.version }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/php-fpm:${{ matrix.version }}-prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - 
        name: Image digest ${{ matrix.version }}-PROD
        run: echo ${{ steps.docker_build_prod.outputs.digest }}
      - 
        name: Build and push ${{ matrix.version }}-WORK
        id: docker_build_work
        uses: docker/build-push-action@v2
        with:
          context: ./Dockerfiles/work
          file: ./Dockerfiles/work/Dockerfile-${{ matrix.version }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/php-fpm:${{ matrix.version }}-work
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - 
        name: Image digest ${{ matrix.version }}-WORK
        run: echo ${{ steps.docker_build_work.outputs.digest }}
